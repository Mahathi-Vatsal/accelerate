{{- if and .Values.numNodes (gt (int .Values.numNodes) 1) }}
apiVersion: kubeflow.org/v2beta1
kind: MPIJob
metadata:
  name: {{ .Release.Name }}-mpijob
spec:
  slotsPerWorker: {{ .Values.slotsPerWorker }}
  runPolicy:
    cleanPodPolicy: {{ .Values.image.cleanPodPolicy }}
  mpiReplicaSpecs:
    Launcher:
      replicas: 1
      template:
        spec:
          hostIPC: {{ .Values.hostIPC }}
          containers:
            - name: {{ .Release.Name }}-mpijob-container
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              command: ["/bin/bash", "-c"]
              args:
                - >-
                  /usr/bin/ssh-keygen -A;
                  /usr/sbin/sshd;
                  HOSTSFILE=$OMPI_MCA_orte_default_hostfile;
                  MASTER_ADDR="$(head -n 1 $HOSTSFILE | sed -n s/[[:space:]]slots.*//p)";  # Fetch MASTER_ADDR from the hostfile
                  echo $MASTER_ADDR;
                  NUM_NODES=$(wc -l < $HOSTSFILE);
                  CARDS_PER_NODE={{ .Values.numCards }};
                  N_CARDS=$((NUM_NODES*CARDS_PER_NODE));

                  # Setup Accelerate environment
                  SETUP_CMD="pip install accelerate && \
                             git clone https://github.com/Mahathi-Vatsal/accelerate.git; \
                             pip install -r accelerate/kubernetes/requirements.txt";

                  eval $SETUP_CMD;

                  mpirun --npernode 1 \
                      --tag-output \
                      --allow-run-as-root \
                      --prefix $MPI_ROOT \
                      -mca routed direct \
                      pip install accelerate && \
                      git clone https://github.com/Mahathi-Vatsal/accelerate.git;

                  mpirun --npernode 1 \
                      --tag-output \
                      --allow-run-as-root \
                      --prefix $MPI_ROOT \
                      -mca routed direct \
                      pip install -r accelerate/kubernetes/requirements.txt";

                  MODEL_PATH=/accelerate;
                  cd $MODEL_PATH;
                  export CCL_WORKER_COUNT=1; \
                  export CCL_ATL_TRANSPORT=ofi; \
                  mpirun -f $HOSTSFILE -n $N_CARDS -ppn {{ .Values.slotsPerWorker }} \
                      --allow-run-as-root \
                      --bind-to core \
                      --map-by ppr:$CARDS_PER_NODE:node:PE=6 \
                      -rank-by core --report-bindings \
                      --tag-output \
                      --merge-stderr-to-stdout --prefix $MPI_ROOT \
                      -x MASTER_ADDR=$MASTER_ADDR \
                      -mca btl_tcp_if_include eth0 \
                      -mca oob_tcp_if_include eth0 \
                      -mca plm_rsh_no_tree_spawn 1 \
                      accelerate launch examples/nlp_example.py";

              resources:
                limits:
                  cpu: 16
                  memory: 64Gi
                  hugepages-2Mi: 4400Mi
                requests:
                  cpu: 16
                  memory: 64Gi
                  hugepages-2Mi: 4400Mi

    Worker:
      replicas: {{ .Values.numNodes }}  # Number of worker pods based on number of nodes
      template:
        spec:
          hostIPC: {{ .Values.hostIPC }}
          containers:
            - name: {{ .Release.Name }}-mpijob-container
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              command: ["/bin/bash", "-c"]
              args:
                - >-
                  /usr/bin/ssh-keygen -A;
                  /usr/sbin/sshd;
                  sleep 365d;  # Keep the container alive for the training job
              resources:
                {{- toYaml .Values.resources | nindent 16 }}
{{- end }}
